{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,UAoBpB,8CC3BCG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,yBAAKC,UAAU,qCACX,yBAAKC,IAAMF,EAAMG,IAAQJ,IACzB,2BAAIA,K,uBCRHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAhBAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAM,SAAAC,GAECH,EAAU,CACNT,KAAMY,EACNL,SAAS,SAK1B,CAAEb,IAIEc,EDnB0BK,CAAcnB,GAAlCU,EAHwB,EAG7BJ,KAAaO,EAHgB,EAGhBA,QAErB,OACI,oCACI,wBAAIjB,UAAU,qCAAsCI,GAElDa,GAAW,uBAAGjB,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPc,EAAOF,KAAK,SAACC,GAAD,OAER,kBAAC,EAAD,eACIW,IAAOX,EAAIhB,IACPgB,UEnBnBY,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,kBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAK9B,OAGI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BACA,4BAEQ4C,EAAWd,KAAI,SAACR,GAAD,OACX,kBAAC,EAAD,CACIoB,IAAQpB,EACRA,SAAYA,U,MChBxCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.65185f9c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] =  useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue,...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n            <h2>Add Category</h2>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            <img src={ url } alt = { title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=5hqPFwz100z0mCRQGOTm3TygGQtxcAOZ`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } );\r\n\r\n    return(gifs);\r\n}","import React from 'react'\r\n\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) => (\r\n\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        \r\n                        />\r\n\r\n                    ) )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n        }\r\n    );\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    setState( {\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n            } )\r\n\r\n    }, [ category ]);\r\n\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n            <ul>\r\n                {\r\n                    categories.map((category) => \r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = {category} \r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}